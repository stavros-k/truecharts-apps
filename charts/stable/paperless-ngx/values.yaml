image:
  repository: ghcr.io/paperless-ngx/paperless-ngx
  pullPolicy: IfNotPresent
  tag: 2.19.1@sha256:cfccb728eeb46e53e6da4b4b860311048d1ebc24d8811e98ccc0cd875f6ccdf6
gotenbergImage:
  repository: docker.io/gotenberg/gotenberg
  pullPolicy: IfNotPresent
  tag: 8.24@sha256:b116a40a1c24917e2bf3e153692da5acd2e78e7cd67e1b2d243b47c178f31c90
tikaImage:
  repository: docker.io/apache/tika
  pullPolicy: IfNotPresent
  tag: 3.2.3.0@sha256:c0154cb95587cde64be74f35ada1a2bd7892219f3f0ac3c9dc6cab34046b3573
service:
  main:
    ports:
      main:
        targetPort: 8000
        port: 10140
  gotenberg:
    enabled: "{{ .Values.tika.enabled }}"
    targetSelector: gotenberg
    ports:
      gotenberg:
        enabled: true
        targetPort: 3000
        port: 3000
  tika:
    enabled: "{{ .Values.tika.enabled }}"
    targetSelector: tika
    ports:
      tika:
        enabled: true
        targetPort: 9998
        port: 9998
persistence:
  data:
    enabled: true
    mountPath: "/data"
  consume:
    enabled: true
    mountPath: "/consume"
  media:
    enabled: true
    mountPath: "/media"
  varrun:
    enabled: false
redis:
  enabled: true
  redisUsername: "default"
cnpg:
  main:
    enabled: true
    user: "paperless-ng"
    database: "paperless-ng"
tika:
  enabled: false

securityContext:
  container:
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    runAsUser: 0
    runAsGroup: 0
workload:
  main:
    podSpec:
      containers:
        main:
          probes:
            liveness:
              type: http
              httpHeaders:
                Host: localhost
            startup:
              type: http
              httpHeaders:
                Host: localhost
            readiness:
              type: http
              httpHeaders:
                Host: localhost
          env:
            PAPERLESS_PORT: "{{ .Values.service.main.ports.main.targetPort }}"
            PAPERLESS_DATA_DIR: "/data/"
            PAPERLESS_CONSUMPTION_DIR: "/consume/"
            PAPERLESS_MEDIA_ROOT: "/media/"
            PAPERLESS_URL: ""
            USERMAP_UID: "{{ .Values.securityContext.container.PUID }}"
            USERMAP_GID: "{{ .Values.securityContext.pod.fsGroup }}"
            PAPERLESS_TIME_ZONE: "{{ .Values.TZ }}"
            PAPERLESS_DBNAME: "{{ .Values.cnpg.main.database }}"
            PAPERLESS_DBUSER: "{{ .Values.cnpg.main.user }}"
            PAPERLESS_DBPORT: "5432"
            PAPERLESS_TIKA_ENABLED: '{{ ternary 1 0 .Values.tika.enabled }}'
            PAPERLESS_TIKA_GOTENBERG_ENDPOINT: '{{ printf "http://%v-gotenberg:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.gotenberg.ports.gotenberg.targetPort }}'
            PAPERLESS_TIKA_ENDPOINT: '{{ printf "http://%v-tika:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.tika.ports.tika.targetPort }}'
            PAPERLESS_WEBSERVER_WORKERS: 2
            PAPERLESS_DBPASS:
              secretKeyRef:
                name: cnpg-main-user
                key: password
            PAPERLESS_DBHOST:
              secretKeyRef:
                name: cnpg-main-urls
                key: host
            PAPERLESS_SECRET_KEY:
              secretKeyRef:
                name: secrets
                key: PAPERLESS_SECRET_KEY
            PAPERLESS_REDIS:
              secretKeyRef:
                expandObjectName: false
                name: '{{ printf "%s-%s" .Release.Name "rediscreds" }}'
                key: url
            PAPERLESS_ADMIN_USER: "admin"
            PAPERLESS_ADMIN_PASSWORD: "admin"
            PAPERLESS_ADMIN_MAIL: "admin@admin.com"
            PAPERLESS_OCR_LANGUAGE: "eng"
            PAPERLESS_OCR_LANGUAGES: "eng fra deu spa ita"
  gotenberg:
    enabled: "{{ .Values.tika.enabled }}"
    type: Deployment
    podSpec:
      containers:
        gotenberg:
          enabled: true
          primary: true
          imageSelector: gotenbergImage
          command:
            - "gotenberg"
            - "--chromium-disable-javascript=true"
            - "--chromium-allow-list=file:///tmp/.*"
          probes:
            liveness:
              type: http
              path: /health
              port: "{{ .Values.service.gotenberg.ports.gotenberg.port }}"
            startup:
              type: http
              path: /health
              port: "{{ .Values.service.gotenberg.ports.gotenberg.port }}"
            readiness:
              type: http
              path: /health
              port: "{{ .Values.service.gotenberg.ports.gotenberg.port }}"
  tika:
    enabled: "{{ .Values.tika.enabled }}"
    type: Deployment
    podSpec:
      containers:
        tika:
          enabled: true
          primary: true
          imageSelector: tikaImage
          probes:
            liveness:
              type: http
              path: /
              port: "{{ .Values.service.tika.ports.tika.port }}"
            startup:
              type: http
              path: /
              port: "{{ .Values.service.tika.ports.tika.port }}"
            readiness:
              type: http
              path: /
              port: "{{ .Values.service.tika.ports.tika.port }}"

